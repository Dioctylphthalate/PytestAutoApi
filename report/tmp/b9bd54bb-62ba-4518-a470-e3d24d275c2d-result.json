{"name": "test_OwnerGuidFee_all[查询客户欠费1]", "status": "broken", "statusDetails": {"message": "utils.other_tools.exceptions.JsonpathExtractionFailed: JsonPath值获取失败 $.errorCode", "trace": "self = <test_OwnerGuidFee_all.TestOwnerguidfeeAll object at 0x0000024B321A45B0>\nin_data = {'assert_data': {'errorCode': {'AssertType': None, 'jsonpath': '$.errorCode', 'type': '==', 'value': 200}, 'errorMsg':...e{yushaoqi_sql}', 'link': 'c5ec2dec-5078-11ee-88ec-00163e1c1703', 'name': '$cache{msg}'}, 'dependence_case': True, ...}\ncase_skip = None\n\n    @allure.story(\"收藏网址接口\")\n    @pytest.mark.parametrize('in_data', eval(re_data), ids=[i['detail'] for i in TestData])\n    def test_OwnerGuidFee_all(self, in_data, case_skip):\n        \"\"\"\n        :param :\n        :return:\n        \"\"\"\n        res = RequestControl(in_data).http_request()\n        TearDownHandler(res).teardown_handle()\n>       Assert(in_data['assert_data']).assert_equality(response_data=res.response_data,\n                                                       sql_data=res.sql_data, status_code=res.status_code)\n\ntest_case\\Ownerfee\\test_OwnerGuidFee_all.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <utils.assertion.assert_control.Assert object at 0x0000024B322D7EE0>\nresponse_data = '{\"success\":false,\"message\":\"管理小区不能为空\",\"detail\":null,\"code\":400,\"result\":\"\",\"timestamp\":1694419014298}'\nsql_data = {'sql': None}, status_code = 200\n\n    def assert_equality(\n            self,\n            response_data: Text,\n            sql_data: Dict,\n            status_code: int) -> None:\n        \"\"\"  assert 断言处理 \"\"\"\n        # 判断数据类型\n        if self._check_params(response_data, sql_data) is not False:\n            for key, values in self.assert_data.items():\n                if key == \"status_code\":\n                    assert status_code == values\n                else:\n                    assert_value = self.assert_data[key]['value']  # 获取 yaml 文件中的期望value值\n                    assert_jsonpath = self.assert_data[key]['jsonpath']  # 获取到 yaml断言中的jsonpath的数据\n                    assert_types = self.assert_data[key]['AssertType']\n                    # 从yaml获取jsonpath，拿到对象的接口响应数据\n                    resp_data = jsonpath(json.loads(response_data), assert_jsonpath)\n                    message = self._message(value=values)\n                    # jsonpath 如果数据获取失败，会返回False，判断获取成功才会执行如下代码\n                    if resp_data is not False:\n                        # 判断断言类型\n                        self.assert_type_handle(\n                            assert_types=assert_types,\n                            sql_data=sql_data,\n                            assert_value=assert_value,\n                            key=key,\n                            values=values,\n                            resp_data=resp_data,\n                            message=message\n                        )\n                    else:\n                        ERROR.logger.error(\"JsonPath值获取失败 %s \", assert_jsonpath)\n>                       raise JsonpathExtractionFailed(f\"JsonPath值获取失败 {assert_jsonpath}\")\nE                       utils.other_tools.exceptions.JsonpathExtractionFailed: JsonPath值获取失败 $.errorCode\n\nutils\\assertion\\assert_control.py:165: JsonpathExtractionFailed"}, "description": "\n        :param :\n        :return:\n        ", "steps": [{"name": "请求URL: http://ceshi.es-iot.cn/api/charge/esChargeOmnibusFee/allOwnerGuidFee", "status": "passed", "start": 1694419014614, "stop": 1694419014614}, {"name": "请求方式: POST", "status": "passed", "start": 1694419014614, "stop": 1694419014614}, {"name": "请求头: ", "status": "passed", "attachments": [{"name": "请求头: ", "source": "b3a89b59-85cd-48f2-9f02-47acd4712c04-attachment.json", "type": "application/json"}], "start": 1694419014614, "stop": 1694419014615}, {"name": "请求数据: ", "status": "passed", "attachments": [{"name": "请求数据: ", "source": "6aac38e5-1224-4b18-a8e9-9d1238c02e9e-attachment.json", "type": "application/json"}], "start": 1694419014615, "stop": 1694419014615}, {"name": "预期数据: ", "status": "passed", "attachments": [{"name": "预期数据: ", "source": "af719fb2-ed2e-4693-a690-74b972e8933f-attachment.json", "type": "application/json"}], "start": 1694419014615, "stop": 1694419014615}, {"name": "响应耗时(ms): 99", "status": "passed", "start": 1694419014615, "stop": 1694419014615}, {"name": "响应结果: ", "status": "passed", "attachments": [{"name": "响应结果: ", "source": "f188833e-7d79-4aae-9719-a440c415e2ca-attachment.json", "type": "application/json"}], "start": 1694419014615, "stop": 1694419014616}], "attachments": [{"name": "log", "source": "6958b495-529d-41d1-b8ef-72ac5b77d8d6-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "in_data", "value": "{'url': 'http://ceshi.es-iot.cn/api/charge/esChargeOmnibusFee/allOwnerGuidFee', 'method': 'POST', 'detail': '查询客户欠费', 'assert_data': {'status_code': 200, 'errorCode': {'jsonpath': '$.errorCode', 'type': '==', 'value': 200, 'AssertType': None}, 'errorMsg': {'jsonpath': '$.errorMsg', 'type': '==', 'value': '请先登录！', 'AssertType': None}}, 'headers': {'Authorization': '$cache{Authorization}', 'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/115.0.0.0 Safari/537.36 Edg/115.0.1901.203\\\\', 'Content-Type': 'application/json'}, 'requestType': 'JSON', 'is_run': None, 'data': {'kk': '$cache{yushaoqi_sql}', 'name': '$cache{msg}', 'link': 123}, 'dependence_case': True, 'dependence_case_data': [{'case_id': 'self', 'dependent_data': [{'dependent_type': 'sqlData', 'jsonpath': '$.name', 'set_cache': None, 'replace_key': '$.data.link'}]}], 'sql': None, 'setup_sql': ['SELECT UUID()  as name'], 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}"}], "start": 1694419014300, "stop": 1694419014617, "uuid": "f44f376c-50e4-474b-87e1-bcdc8c2172fc", "historyId": "4278ef0872c7f10c723d9b0ec46ede64", "testCaseId": "2c99953b555e49df715db46710a0090f", "fullName": "test_case.Ownerfee.test_OwnerGuidFee_all.TestOwnerguidfeeAll#test_OwnerGuidFee_all", "labels": [{"name": "feature", "value": "收藏模块"}, {"name": "epic", "value": "开发平台接口"}, {"name": "story", "value": "收藏网址接口"}, {"name": "parentSuite", "value": "test_case.Ownerfee"}, {"name": "suite", "value": "test_OwnerGuidFee_all"}, {"name": "subSuite", "value": "TestOwnerguidfeeAll"}, {"name": "host", "value": "DESKTOP-BJ4FQ1J"}, {"name": "thread", "value": "28040-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.Ownerfee.test_OwnerGuidFee_all"}]}